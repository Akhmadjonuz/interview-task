openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://task.beta'
paths:
  /api/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"result\": [\n \"id\": 1,\n \"phone\": \"793631747611\",\n \"role\": 2,\n \"token\": \"eyJ0eXA...\"\n]\n}"
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: "Credential don't match or password error"
                properties:
                  result:
                    type: string
                    example: "Credential don't match or password error"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: integer
                  description: "The user's phone number."
                  example: 19
                password:
                  type: string
                  description: "The user's password."
                  example: asperiores
              required:
                - phone
                - password
      security: []
  /api/register:
    post:
      summary: 'Register user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"result\": [\n\"id\": 1,\n\"phone\": \"793631747611\",\n\"role\": 2,\n\"token\": \"eyJ0eXA...\"\n]\n}"
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'phone number already exists'
                properties:
                  result:
                    type: string
                    example: 'phone number already exists'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: integer
                  description: "The user's phone number."
                  example: 11
                password:
                  type: string
                  description: "The user's password."
                  example: non
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: non
              required:
                - phone
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: 'Logout user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Successfully logged out'
                properties:
                  result:
                    type: string
                    example: 'Successfully logged out'
      tags:
        - Authentication
  /api/brand/create:
    post:
      summary: 'Create brand'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Brand created successfully'
                properties:
                  result:
                    type: string
                    example: 'Brand created successfully'
      tags:
        - Brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The brand's name."
                  example: soluta
                status:
                  type: boolean
                  description: "nullable The brand's status."
                  example: true
              required:
                - name
  /api/brand/update:
    put:
      summary: 'Update brand'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Brand updated successfully'
                properties:
                  result:
                    type: string
                    example: 'Brand updated successfully'
      tags:
        - Brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: "The brand's id."
                  example: 1
                name:
                  type: string
                  description: "nullable The brand's name."
                  example: illo
                status:
                  type: boolean
                  description: "nullable The brand's status."
                  example: false
              required:
                - id
  /api/brand/delete:
    delete:
      summary: 'Delete brand'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Brand deleted successfully'
                properties:
                  result:
                    type: string
                    example: 'Brand deleted successfully'
      tags:
        - Brand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: "The brand's id."
                  example: 2
              required:
                - id
  '/api/show{id}':
    get:
      summary: 'Get brand list'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: []
                properties:
                  result:
                    type: array
                    example: []
      tags:
        - Brand
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: perspiciatis
  /api/category/create:
    post:
      summary: 'Create category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Category created successfully'
                properties:
                  result:
                    type: string
                    example: 'Category created successfully'
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The category's name."
                  example: omnis
                status:
                  type: boolean
                  description: "nullable The category's status."
                  example: true
              required:
                - name
  /api/category/update:
    put:
      summary: 'Update category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Category updated successfully'
                properties:
                  result:
                    type: string
                    example: 'Category updated successfully'
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: "The category's id."
                  example: 17
                name:
                  type: string
                  description: "nullable The category's name."
                  example: qui
                status:
                  type: boolean
                  description: "nullable The category's status."
                  example: false
              required:
                - id
  /api/category/delete:
    delete:
      summary: 'Delete category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Category deleted successfully'
                properties:
                  result:
                    type: string
                    example: 'Category deleted successfully'
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: "The category's id."
                  example: 2
              required:
                - id
  /api/product/create:
    post:
      summary: 'Create product'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Product created successfully'
                properties:
                  result:
                    type: string
                    example: 'Product created successfully'
      tags:
        - Product
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "The product's name."
                  example: quo
                photo:
                  type: string
                  format: binary
                  description: "The product's photo."
                price:
                  type: string
                  description: "The product's price."
                  example: nostrum
                category_id:
                  type: integer
                  description: "The product's category id."
                  example: 4
                brand_id:
                  type: integer
                  description: "The product's brand id."
                  example: 6
                status:
                  type: boolean
                  description: "nullable The product's status."
                  example: false
              required:
                - name
                - photo
                - price
                - category_id
                - brand_id
  /api/product/update:
    put:
      summary: 'Update product'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: 'Product updated successfully'
                properties:
                  result:
                    type: string
                    example: 'Product updated successfully'
      tags:
        - Product
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: "The product's id."
                  example: 12
                name:
                  type: string
                  description: "nullable The product's name."
                  example: tenetur
                photo:
                  type: string
                  format: binary
                  description: "nullable The product's photo."
                price:
                  type: string
                  description: "nullable The product's price."
                  example: sit
                category_id:
                  type: integer
                  description: "nullable The product's category id."
                  example: 1
                brand_id:
                  type: integer
                  description: "nullable The product's brand id."
                  example: 8
                status:
                  type: boolean
                  description: "nullable The product's status."
                  example: false
              required:
                - id
  /api/product/show:
    get:
      summary: 'Get product list'
      description: ''
      parameters:
        -
          in: query
          name: price
          description: "The product's price."
          example: veniam
          required: false
          schema:
            type: string
            description: "The product's price."
            example: veniam
        -
          in: query
          name: category_id
          description: "The product's category id."
          example: 2
          required: false
          schema:
            type: integer
            description: "The product's category id."
            example: 2
        -
          in: query
          name: brand_id
          description: "The product's brand id."
          example: 10
          required: false
          schema:
            type: integer
            description: "The product's brand id."
            example: 10
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: []
                properties:
                  result:
                    type: array
                    example: []
      tags:
        - Product
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: integer
                  description: ''
                  example: 19
                category_id:
                  type: integer
                  description: ''
                  example: 10
                brand_id:
                  type: integer
                  description: ''
                  example: 9
      security: []
  /api/product/search:
    get:
      summary: 'Search product'
      description: ''
      parameters:
        -
          in: query
          name: id
          description: "The product's id."
          example: 8
          required: false
          schema:
            type: integer
            description: "The product's id."
            example: 8
        -
          in: query
          name: name
          description: "The product's name."
          example: doloremque
          required: false
          schema:
            type: string
            description: "The product's name."
            example: doloremque
        -
          in: query
          name: slug
          description: "The product's slug."
          example: et
          required: false
          schema:
            type: string
            description: "The product's slug."
            example: et
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  result: []
                properties:
                  result:
                    type: array
                    example: []
      tags:
        - Product
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 4
                slug:
                  type: string
                  description: ''
                  example: voluptatem
                name:
                  type: string
                  description: ''
                  example: praesentium
      security: []
tags:
  -
    name: Authentication
    description: ''
  -
    name: Brand
    description: ''
  -
    name: Category
    description: ''
  -
    name: Product
    description: ''
